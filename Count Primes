Given an integer n, return the number of prime numbers that are strictly less than n.
Example 1:
Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
Method Name:Sieve of Eratosthenes
code:
import java.util.*;
class Solution {
    public int countPrimes(int n) {
        int c=0;
     int[] l=new int[n+1];
     Arrays.fill(l,0);
    for(int i=2;i*i<=n;i++){
        if(l[i]==0){
            for(int j=i*i;j<=n;j+=i){
                l[j]=1;
            }
        }
    }
        for(int i=2;i<n;i++){
           if(l[i]==0){
             //System.out.println(i);
             c++;
           }
          
        }
        //System.out.println(c);
        return c;
    }

}
Time Complexity: O(Nloglogn)
